name: Java CI with Gradle

on:
  pull_request:
    branches: [ "release", "develop" ]


jobs:
  checkstyle_job:
    runs-on: ubuntu-latest
    name: Checkstyle job
    steps:
      - name: Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run check style
        uses: nikitasavinov/checkstyle-action@master
        with:
          github_token: ${{ secrets.ACTION_TOKEN }}
          tool_name: 'testtool'
          level: error
          checkstyle_config: ./custom_google_checks.xml

  build_job:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # 서비스 지정
    services:
      # mongodb 서비스를 사용
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    # Task의 sequence를 명시한다.
    steps:

      # 리포지토리로 체크아웃을 진행하고 서브모듈을 참조하여 clone한다.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Update submodule
        run: |
          git submodule update --remote --recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # test.yml 확인
      - name: Configure test.yml
        run: |
          git submodule status
          ls ./src/main/resources
          cat ./src/main/resources/test.yml