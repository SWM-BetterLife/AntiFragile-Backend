name: Deploy to EC2 with Docker

on:
  push:
    branches: [ "release", "develop", "feature/SWM-34-modify-dev-cd" ]

jobs:
  deploy_job:
    runs-on: ubuntu-latest

    steps:
      # 레포지토리 체크아웃
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Update submodule
        run: |
          git submodule update --remote --recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # Docker 이미지를 빌드할 준비
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # DockerHub에 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Develop에 Docker 이미지를 build, push
      - name: Build and push Docker image to develop
        if: contains(github.ref, 'develop') || contains(github.ref, 'feature/SWM-34-modify-dev-cd')
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/antifragile-dev:latest
          build-args: |
            SPRING_PROFILES_ACTIVE=develop

      # Release에 Docker 이미지를 build, push
      - name: Build and push Docker image to release
        if: contains(github.ref, 'develop') || contains(github.ref, 'feature/SWM-34-modify-dev-cd')
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/antifragile-release:latest
          build-args: |
            SPRING_PROFILES_ACTIVE=release

      # docker-compose 파일을 EC2로 복사
      - name: Copy docker-compose file to EC2
        if: contains(github.ref, 'develop') || contains(github.ref, 'feature/SWM-34-modify-dev-cd')
        uses: appleboy/scp-action@master
        with:
          source: 'docker-compose.develop.yml'
          target: '${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/docker-compose.develop.yml'
          key: ${{ secrets.EC2_SSH_KEY }}

      # EC2 인스턴스에 SSH로 접속하여 Docker 컨테이너를 업데이트하고 실행
      - name: Deploy to EC2 (develop)
        if: contains(github.ref, 'develop') || contains(github.ref, 'feature/SWM-34-modify-dev-cd')
        uses: appleboy/ssh-action@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml up -d
            
